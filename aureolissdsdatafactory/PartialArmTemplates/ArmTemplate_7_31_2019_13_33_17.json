{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "aureolissdsdatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSetting",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSetting"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSetting",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false
						},
						"inputs": [
							{
								"referenceName": "Share",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "SDS_Data_Sink",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Share')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Sharepoint')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSetting",
									"recursive": true,
									"wildcardFileName": "*.*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSetting"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSetting",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Share",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "SDS_Data_Sink",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Share')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PDF_testing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PDF_read",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PDF_read_testing",
								"type": "DataFlowReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PDF_read_testing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "curated"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": ".",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Postinumero",
						"type": "String"
					},
					{
						"name": "Talotyyppi",
						"type": "String"
					},
					{
						"name": "Rakennusvuosi",
						"type": "String"
					},
					{
						"name": "Alue",
						"type": "String"
					},
					{
						"name": "Kaupunki",
						"type": "String"
					},
					{
						"name": "Neliohinta_2010",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2010",
						"type": "String"
					},
					{
						"name": "Neliohinta_2011",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2011",
						"type": "String"
					},
					{
						"name": "Neliohinta_2012",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2012",
						"type": "String"
					},
					{
						"name": "Neliohinta_2013",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2013",
						"type": "String"
					},
					{
						"name": "Neliohinta_2014",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2014",
						"type": "String"
					},
					{
						"name": "Neliohinta_2015",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2015",
						"type": "String"
					},
					{
						"name": "Neliohinta_2016",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2016",
						"type": "String"
					},
					{
						"name": "Neliohinta_2017",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2017",
						"type": "String"
					},
					{
						"name": "Neliohinta_2018",
						"type": "String"
					},
					{
						"name": "Kauppojen_lukumaara_2018",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Osakeasuntohinnat2010')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Osakeasuntojen_hinnat_2010_2014.csv",
						"folderPath": "SDS_Data",
						"fileSystem": "realestatedata"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": ".",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PDF_read')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Lapsen_koko_nimi__Den_minderårigas_fullständiga_namn",
						"type": "varchar"
					},
					{
						"name": "Ikä__Ålder",
						"type": "varchar"
					},
					{
						"name": "Syntymäaika__Födelsedatum",
						"type": "varchar"
					},
					{
						"name": "Lapsen_koko_nimi__Den_minderårigas_fullständiga_namn_2",
						"type": "varchar"
					},
					{
						"name": "Ikä__Ålder_2",
						"type": "varchar"
					},
					{
						"name": "Syntymäaika__Födelsedatum_2",
						"type": "varchar"
					},
					{
						"name": "Varausnumero__Bokningsnummer",
						"type": "varchar"
					},
					{
						"name": "Laiva__Fartayg1",
						"type": "varchar"
					},
					{
						"name": "Lähtöpäivä__Avresedatum1",
						"type": "varchar"
					},
					{
						"name": "Mistä__Från1",
						"type": "varchar"
					},
					{
						"name": "Laiva__Fartyg2",
						"type": "varchar"
					},
					{
						"name": "Lähtöpäivä__Avresedatum2",
						"type": "varchar"
					},
					{
						"name": "Mistä__Från2",
						"type": "varchar"
					},
					{
						"name": "Laiva__Fartyg3",
						"type": "varchar"
					},
					{
						"name": "Lähtöpäivä__Avresedatum3",
						"type": "varchar"
					},
					{
						"name": "Mistä__Från3",
						"type": "varchar"
					},
					{
						"name": "Nimi__Namn",
						"type": "varchar"
					},
					{
						"name": "Postiosoite__Adress",
						"type": "varchar"
					},
					{
						"name": "Puhelinnumero__Telefon",
						"type": "varchar"
					},
					{
						"name": "Nimi__Namn_2",
						"type": "varchar"
					},
					{
						"name": "Postiosoite__Adress_2",
						"type": "varchar"
					},
					{
						"name": "Puhelinnumero__Telefon_2",
						"type": "varchar"
					},
					{
						"name": "Paikka_ja_päivämäärä__Datum_och_ort",
						"type": "varchar"
					},
					{
						"name": "Mihin__Till_1",
						"type": "varchar"
					},
					{
						"name": "Mihin__Till_2",
						"type": "varchar"
					},
					{
						"name": "Mihin__Till_3",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Mlupa3]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Share')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Share",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "Source_Data"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"nullValue": ".",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PDF_testing",
							"type": "PipelineReference"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/newcontainer/blobs/",
					"blobPathEndsWith": ".csv",
					"scope": "/subscriptions/7a92108a-7090-4c7b-ae2e-c9baf4280906/resourceGroups/SmartDataService/providers/Microsoft.Storage/storageAccounts/aureolissdsdatalakegen1",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PDF_testing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Osakeasunto_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Read osakeasunto data from two files and join them together. Source files separated as they did not fit into one from Tilastokeskus. DerivedColumn2 has derivation for Postinumero, Alue and Kaupunki using Data Factory functions.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Osakeasunnot_2015_2018_csv",
								"type": "DatasetReference"
							},
							"name": "Osakeaasuntohinnat2015"
						},
						{
							"dataset": {
								"referenceName": "Osakeasuntohinnat2010",
								"type": "DatasetReference"
							},
							"name": "Osakeasuntohinnat2010"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Osakeasuntojen_hinnat_2010_2018",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink5"
						}
					],
					"script": "\n\nsource(output(\n\t\tPostinumero as string,\n\t\tTalotyyppi as string,\n\t\tRakennusvuosi as string,\n\t\t{2015 Neliohinta (EUR/m2)} as decimal(10,0),\n\t\t{2015 Kauppojen lukumaara} as integer,\n\t\t{2016 Neliohinta (EUR/m2)} as decimal(10,0),\n\t\t{2016 Kauppojen lukumaara} as integer,\n\t\t{2017 Neliohinta (EUR/m2)} as decimal(10,0),\n\t\t{2017 Kauppojen lukumaara} as integer,\n\t\t{2018 Neliohinta (EUR/m2)} as decimal(10,0),\n\t\t{2018 Kauppojen lukumaara} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> Osakeaasuntohinnat2015\nsource(output(\n\t\tPostinumero as string,\n\t\tTalotyyppi as string,\n\t\tRakennusvuosi as string,\n\t\t{2010 Neliohinta (EUR/m2)} as short,\n\t\t{2010 Kauppojen lukumaara} as short,\n\t\t{2011 Neliohinta (EUR/m2)} as short,\n\t\t{2011 Kauppojen lukumaara} as short,\n\t\t{2012 Neliohinta (EUR/m2)} as short,\n\t\t{2012 Kauppojen lukumaara} as short,\n\t\t{2013 Neliohinta (EUR/m2)} as short,\n\t\t{2013 Kauppojen lukumaara} as short,\n\t\t{2014 Neliohinta (EUR/m2)} as short,\n\t\t{2014 Kauppojen lukumaara} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> Osakeasuntohinnat2010\nOsakeaasuntohinnat2015 select(mapColumn(\n\t\tPostinumero,\n\t\tTalotyyppi,\n\t\tRakennusvuosi,\n\t\t{2015 Neliohinta} = {2015 Neliohinta (EUR/m2)},\n\t\t{2015 Kauppojen lukumaara},\n\t\t{2016 Neliohinta} = {2016 Neliohinta (EUR/m2)},\n\t\t{2016 Kauppojen lukumaara},\n\t\t{2017 Neliohinta} = {2017 Neliohinta (EUR/m2)},\n\t\t{2017 Kauppojen lukumaara},\n\t\t{2018 Neliohinta} = {2018 Neliohinta (EUR/m2)},\n\t\t{2018 Kauppojen lukumaara}\n\t)) ~> Select2\nSelect2 derive(Postinumero = substring(Postinumero, 1, 5),\n\t\tAlue = trim(substring(Postinumero, instr(Postinumero, ' '), instr(Postinumero, '(') - instr(Postinumero, ' '))),\n\t\tKaupunki = trim(substring(Postinumero, instr(Postinumero, '('), 50),' ())')) ~> DerivedColumn2\nOsakeasuntohinnat2010 select() ~> Select3\nDerivedColumn2, Select3 join(DerivedColumn2@Postinumero == substring(Select3@Postinumero, 1, 5)\n\t&& Select2@Talotyyppi == Select3@Talotyyppi\n\t&& Select2@Rakennusvuosi == Select3@Rakennusvuosi,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 select(mapColumn(\n\t\tPostinumero = DerivedColumn2@Postinumero,\n\t\tAlue,\n\t\tKaupunki,\n\t\tTalotyyppi = Select2@Talotyyppi,\n\t\tRakennusvuosi = Select2@Rakennusvuosi,\n\t\tNeliohinta_2015 = {2015 Neliohinta},\n\t\tKauppojen_lukumaara_2015 = {2015 Kauppojen lukumaara},\n\t\tNeliohinta_2016 = {2016 Neliohinta},\n\t\tKauppojen_lukumaara_2016 = {2016 Kauppojen lukumaara},\n\t\tNeliohinta_2017 = {2017 Neliohinta},\n\t\tKauppojen_lukumaara_2017 = {2017 Kauppojen lukumaara},\n\t\tNeliohinta_2018 = {2018 Neliohinta},\n\t\tKauppojen_lukumaara_2018 = {2018 Kauppojen lukumaara},\n\t\tNeliohinta_2010 = {2010 Neliohinta (EUR/m2)},\n\t\tKauppojen_lukumaara_2010 = {2010 Kauppojen lukumaara},\n\t\tNeliohinta_2011 = {2011 Neliohinta (EUR/m2)},\n\t\tKauppojen_lukumaara_2011 = {2011 Kauppojen lukumaara},\n\t\tNeliohinta_2012 = {2012 Neliohinta (EUR/m2)},\n\t\tKauppojen_lukumaara_2012 = {2012 Kauppojen lukumaara},\n\t\tNeliohinta_2013 = {2013 Neliohinta (EUR/m2)},\n\t\tKauppojen_lukumaara_2013 = {2013 Kauppojen lukumaara},\n\t\tNeliohinta_2014 = {2014 Neliohinta (EUR/m2)},\n\t\tKauppojen_lukumaara_2014 = {2014 Kauppojen lukumaara}\n\t),\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect7 sink(input(\n\t\tPostinumero as string,\n\t\tAlue as string,\n\t\tKaupunki as string,\n\t\tTalotyyppi as string,\n\t\tRakennusvuosi as string,\n\t\tNeliohinta_2010 as decimal(20,2),\n\t\tKauppojen_lukumaara_2010 as integer,\n\t\tNeliohinta_2011 as decimal(20,2),\n\t\tKauppojen_lukumaara_2011 as integer,\n\t\tNeliohinta_2012 as decimal(20,2),\n\t\tKauppojen_lukumaara_2012 as integer,\n\t\tNeliohinta_2013 as decimal(20,2),\n\t\tKauppojen_lukumaara_2013 as integer,\n\t\tNeliohinta_2014 as decimal(20,2),\n\t\tKauppojen_lukumaara_2014 as integer,\n\t\tNeliohinta_2015 as decimal(20,2),\n\t\tKauppojen_lukumaara_2015 as integer,\n\t\tNeliohinta_2016 as decimal(20,2),\n\t\tKauppojen_lukumaara_2016 as integer,\n\t\tNeliohinta_2017 as decimal(20,2),\n\t\tKauppojen_lukumaara_2017 as integer,\n\t\tNeliohinta_2018 as decimal(20,2),\n\t\tKauppojen_lukumaara_2018 as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tkeys:['Postinumero','Talotyyppi','Rakennusvuosi'],\n\tmapColumn(\n\t\tPostinumero,\n\t\tAlue,\n\t\tKaupunki,\n\t\tTalotyyppi,\n\t\tRakennusvuosi,\n\t\tNeliohinta_2010,\n\t\tKauppojen_lukumaara_2010,\n\t\tNeliohinta_2011,\n\t\tKauppojen_lukumaara_2011,\n\t\tNeliohinta_2012,\n\t\tKauppojen_lukumaara_2012,\n\t\tNeliohinta_2013,\n\t\tKauppojen_lukumaara_2013,\n\t\tNeliohinta_2014,\n\t\tKauppojen_lukumaara_2014,\n\t\tNeliohinta_2015,\n\t\tKauppojen_lukumaara_2015,\n\t\tNeliohinta_2016,\n\t\tKauppojen_lukumaara_2016,\n\t\tNeliohinta_2017,\n\t\tKauppojen_lukumaara_2017,\n\t\tNeliohinta_2018,\n\t\tKauppojen_lukumaara_2018\n\t)) ~> sink4\nSelect7 sink(input(\n\t\tPostinumero as string,\n\t\tTalotyyppi as string,\n\t\tRakennusvuosi as string,\n\t\tAlue as string,\n\t\tKaupunki as string,\n\t\tNeliohinta_2010 as string,\n\t\tKauppojen_lukumaara_2010 as string,\n\t\tNeliohinta_2011 as string,\n\t\tKauppojen_lukumaara_2011 as string,\n\t\tNeliohinta_2012 as string,\n\t\tKauppojen_lukumaara_2012 as string,\n\t\tNeliohinta_2013 as string,\n\t\tKauppojen_lukumaara_2013 as string,\n\t\tNeliohinta_2014 as string,\n\t\tKauppojen_lukumaara_2014 as string,\n\t\tNeliohinta_2015 as string,\n\t\tKauppojen_lukumaara_2015 as string,\n\t\tNeliohinta_2016 as string,\n\t\tKauppojen_lukumaara_2016 as string,\n\t\tNeliohinta_2017 as string,\n\t\tKauppojen_lukumaara_2017 as string,\n\t\tNeliohinta_2018 as string,\n\t\tKauppojen_lukumaara_2018 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tpartitionFileNames:['osakeasunto_curated'],\n\tpartitionBy('hash', 1)) ~> sink5"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Osakeasuntohinnat2010')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PDF_read_testing')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "to_csv_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PDF_read",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"script": "\n\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string,\n\t\tColumn_24 as string,\n\t\tColumn_25 as string,\n\t\tColumn_26 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipLines: 1) ~> source1\nsource1 select(mapColumn(\n\t\tColumn_1,\n\t\tColumn_2,\n\t\tColumn_3,\n\t\tColumn_4,\n\t\tColumn_5,\n\t\tColumn_6,\n\t\tColumn_7,\n\t\tColumn_8,\n\t\tColumn_9,\n\t\tColumn_10,\n\t\tColumn_11,\n\t\tColumn_12,\n\t\tColumn_13,\n\t\tColumn_14,\n\t\tColumn_15,\n\t\tColumn_16,\n\t\tColumn_17,\n\t\tColumn_18,\n\t\tColumn_19,\n\t\tColumn_20,\n\t\tColumn_21,\n\t\tColumn_22,\n\t\tColumn_23,\n\t\tColumn_24,\n\t\tColumn_25,\n\t\tColumn_26\n\t)) ~> Select1\nSelect1 sink(input(\n\t\t{Lapsen_koko_nimi__Den_minderårigas_fullständiga_namn} as string,\n\t\t{Ikä__Ålder} as string,\n\t\t{Syntymäaika__Födelsedatum} as string,\n\t\t{Lapsen_koko_nimi__Den_minderårigas_fullständiga_namn_2} as string,\n\t\t{Ikä__Ålder_2} as string,\n\t\t{Syntymäaika__Födelsedatum_2} as string,\n\t\tVarausnumero__Bokningsnummer as string,\n\t\tLaiva__Fartayg1 as string,\n\t\t{Lähtöpäivä__Avresedatum1} as string,\n\t\t{Mistä__Från1} as string,\n\t\tLaiva__Fartyg2 as string,\n\t\t{Lähtöpäivä__Avresedatum2} as string,\n\t\t{Mistä__Från2} as string,\n\t\tLaiva__Fartyg3 as string,\n\t\t{Lähtöpäivä__Avresedatum3} as string,\n\t\t{Mistä__Från3} as string,\n\t\tNimi__Namn as string,\n\t\tPostiosoite__Adress as string,\n\t\tPuhelinnumero__Telefon as string,\n\t\tNimi__Namn_2 as string,\n\t\tPostiosoite__Adress_2 as string,\n\t\tPuhelinnumero__Telefon_2 as string,\n\t\t{Paikka_ja_päivämäärä__Datum_och_ort} as string,\n\t\tMihin__Till_1 as string,\n\t\tMihin__Till_2 as string,\n\t\tMihin__Till_3 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PDF_read')]"
			]
		}
	]
}